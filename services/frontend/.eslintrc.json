{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint", "prettier", "import"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:prettier/recommended",
    "next/core-web-vitals"
  ],
  "rules": {
    "no-warning-comments": [
      "error",
      { "terms": ["eslint-disable"], "location": "start" }
    ],
    "prettier/prettier": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "prefix": ["I"],
        "filter": {
          "regex": "^(Assertion|AsymmetricMatchersContaining)$",
          "match": false
        }
      }
    ],
    "complexity": ["error", { "max": 10 }],
    "max-classes-per-file": ["error", 1],
    "max-depth": ["error", 4],
    "max-len": [
      "error",
      { "code": 80, "tabWidth": 2, "ignoreUrls": true, "ignoreStrings": true }
    ],
    "max-lines": [
      "error",
      { "max": 300, "skipBlankLines": true, "skipComments": true }
    ],
    "max-lines-per-function": [
      "error",
      { "max": 50, "skipBlankLines": true, "skipComments": true }
    ],
    "max-nested-callbacks": ["error", 3],
    "max-params": ["error", 5],
    "no-console": "error",
    "no-debugger": "error",
    "no-alert": "error",
    "no-var": "error",
    "prefer-const": "error",
    "prefer-arrow-callback": "error",
    "arrow-spacing": "error",
    "no-duplicate-imports": "error",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "TSUnknownKeyword",
        "message": "The 'unknown' type is forbidden here. Use cast utilities from '@/utils/cast' instead."
      },
      {
        "selector": "TSTypeAliasDeclaration",
        "message": "Type definitions must be in types/ folder"
      },
      {
        "selector": "TSInterfaceDeclaration",
        "message": "Interface definitions must be in interfaces/ folder"
      },
      {
        "selector": "ExportAllDeclaration",
        "message": "Re-export statements are forbidden. Import and re-export explicitly or use direct imports."
      },
      {
        "selector": "ExportNamedDeclaration[source]",
        "message": "Re-export statements are forbidden. Import and re-export explicitly or use direct imports."
      }
    ]
  },
  "ignorePatterns": ["dist/", "node_modules/", "*.js", "*.d.ts", ".next/"],
  "overrides": [
    {
      "files": ["app/layout.tsx", "app/page.tsx"],
      "rules": {
        "no-console": "off"
      }
    },
    {
      "files": ["components/**/*.tsx", "app/**/*.tsx"],
      "rules": {
        "max-lines-per-function": [
          "error",
          { "max": 100, "skipBlankLines": true, "skipComments": true }
        ]
      }
    }
  ]
}
