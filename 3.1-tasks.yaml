tasks:
  - name: "Initialize MCP Service Module and Project Structure"
    acceptance_criteria:
      - "AC-1"
    subtasks:
      - "Create services/mcp-service/ directory structure following the source tree"
      - "Initialize Go module with go.mod and go.sum files"
      - "Add Mark3Labs MCP-Go dependency to go.mod (latest version)"
      - "Create cmd/main.go entry point file with basic package structure"
      - "Set up internal/ directory structure: server/, operations/, docs/, auth/, cache/, config/"
      - "Set up pkg/ directory structure: types/, errors/, utils/"
      - "Create Dockerfile with multi-stage build for Railway deployment"
      - "Create .env file with MCP service environment variables"
    status: "pending"

  - name: "Implement WebSocket Server Foundation"
    acceptance_criteria:
      - "AC-1"
      - "AC-5"
    subtasks:
      - "Configure Mark3Labs MCP server setup in internal/server/mcp.go"
      - "Implement WebSocket connection handler using Mark3Labs library"
      - "Add connection upgrade logic from HTTP to WebSocket"
      - "Implement basic connection lifecycle management (open, close, error)"
      - "Add structured logging for connection events using zerolog"
      - "Configure WebSocket server to listen on MCP_PORT from environment"
      - "Add graceful shutdown handling for WebSocket connections"
    status: "pending"

  - name: "Create HTTP Endpoint for MCP Protocol"
    acceptance_criteria:
      - "AC-2"
    subtasks:
      - "Add HTTP server setup using Go stdlib net/http"
      - "Implement /mcp endpoint that upgrades to WebSocket"
      - "Add CORS middleware for cross-origin WebSocket connections"
      - "Configure proper WebSocket headers and protocols"
      - "Add health check endpoint /health for Railway monitoring"
      - "Implement proper error responses for invalid upgrade requests"
      - "Add request logging middleware for HTTP endpoints"
    status: "pending"

  - name: "Implement MCP Message Parsing and Validation"
    acceptance_criteria:
      - "AC-3"
    subtasks:
      - "Define MCP request/response type structures in pkg/types/tools.go"
      - "Implement JSON message parsing for incoming MCP requests"
      - "Add schema validation for MCP message format compliance"
      - "Create parameter validation for tool calls with enum/pattern support"
      - "Implement error handling for malformed messages"
      - "Add message type detection (initialize, tool_call, etc.)"
      - "Create validation for required MCP protocol fields"
      - "Add logging for invalid messages with details"
    status: "pending"

  - name: "Build MCP Response Formatting System"
    acceptance_criteria:
      - "AC-4"
    subtasks:
      - "Define MCP result type wrappers in pkg/types/results.go"
      - "Implement structured response formatting to MCP standard"
      - "Add success response formatting for tool execution results"
      - "Create error response formatting with proper MCP error codes"
      - "Implement response serialization to JSON"
      - "Add response validation to ensure MCP compliance"
      - "Create response builders for different result types"
      - "Add correlation ID handling for request/response matching"
    status: "pending"

  - name: "Implement Connection Management and State Handling"
    acceptance_criteria:
      - "AC-5"
      - "AC-6"
    subtasks:
      - "Create connection registry to track active WebSocket connections"
      - "Implement connection state management (connecting, connected, disconnected)"
      - "Add connection metadata storage (client info, session data)"
      - "Implement connection cleanup on disconnect"
      - "Add connection timeout handling and keepalive"
      - "Create connection authentication state tracking"
      - "Implement proper resource cleanup on connection close"
      - "Add connection metrics collection and logging"
    status: "pending"

  - name: "Add Concurrent Connection Support"
    acceptance_criteria:
      - "AC-6"
    subtasks:
      - "Implement goroutine-based connection handling"
      - "Add connection pool management with configurable limits"
      - "Implement per-connection message queues"
      - "Add mutex-protected shared state access"
      - "Create connection load balancing for multiple clients"
      - "Implement rate limiting per connection"
      - "Add concurrent message processing with worker pools"
      - "Create connection monitoring and health checks"
    status: "pending"

  - name: "Integrate Configuration Management"
    acceptance_criteria:
      - "AC-1"
      - "AC-2"
    subtasks:
      - "Implement configuration loading using Viper in internal/config/config.go"
      - "Define configuration struct with server, MCP, and service settings"
      - "Add environment variable mapping for all configuration values"
      - "Create configuration validation with required field checks"
      - "Add default values for all configuration options"
      - "Implement configuration hot-reloading capability"
      - "Add configuration logging (without sensitive values)"
      - "Create configuration documentation and examples"
    status: "pending"

  - name: "Add Recovery and Capability Middleware"
    acceptance_criteria:
      - "AC-1"
      - "AC-3"
      - "AC-5"
    subtasks:
      - "Implement panic recovery middleware for WebSocket handlers"
      - "Add capability negotiation for MCP protocol features"
      - "Create middleware chain for request processing"
      - "Implement request/response logging middleware"
      - "Add authentication middleware for secure connections"
      - "Create rate limiting middleware per connection"
      - "Implement circuit breaker middleware for external service calls"
      - "Add metrics collection middleware for performance monitoring"
    status: "pending"

  - name: "Create Unit Tests for MCP Server Components"
    acceptance_criteria:
      - "AC-1"
      - "AC-2"
      - "AC-3"
      - "AC-4"
      - "AC-5"
      - "AC-6"
    subtasks:
      - "Write unit tests for WebSocket connection handling"
      - "Create tests for HTTP endpoint WebSocket upgrade"
      - "Add tests for message parsing and validation"
      - "Implement tests for response formatting"
      - "Create connection management tests"
      - "Add concurrent connection handling tests"
      - "Write configuration loading tests"
      - "Create middleware functionality tests"
      - "Add error handling and recovery tests"
      - "Implement performance and load tests"
    status: "pending"

  - name: "Create Integration Tests for MCP Protocol Compliance"
    acceptance_criteria:
      - "AC-1"
      - "AC-2"
      - "AC-3"
      - "AC-4"
      - "AC-5"
      - "AC-6"
    subtasks:
      - "Create WebSocket client test harness simulating Claude"
      - "Test complete MCP handshake and initialization"
      - "Validate message format compliance with MCP standard"
      - "Test error handling and recovery scenarios"
      - "Create load tests for concurrent connections"
      - "Test connection lifecycle management"
      - "Validate response formatting against MCP specification"
      - "Test timeout and reconnection scenarios"
      - "Create end-to-end protocol compliance tests"
      - "Add performance benchmarking tests"
    status: "pending"
