# Yamale schema for docs/requirements.yml (Version 2.0 - Flattened Structure)
# Validates flattened scenario registry with implementation status tracking

metadata:
  title: str()
  version: str()
  last_updated: str()
  description: str(required=False)

# Flattened scenarios section - each scenario tracked independently
scenarios: map(key=regex(r'^(UT|IT|EE)_\d{5}_\d{2}$'), val=include('scenario'))

schema:
  scenario_id_pattern: str()
  status_values: list(str())
  categories: list(str())
  gherkin_keywords: list(str())

references:
  test_naming: str()
  coding_standards: str()
  scenario_merge_design: str(required=False)
  test_files:
    unit_tests: list(str())
    integration_tests: list(str())
    e2e_tests: list(str())

---
# Include definitions

scenario:
  description: str()
  category: enum('backend', 'frontend', 'performance', 'integration')
  requirement: str()
  implementation_status: include('implementation_status')
  last_updated: str()
  user_stories: list(include('user_story'), min=1)
  merged_steps: include('merged_steps')

implementation_status:
  status: enum('pending', 'implemented', 'failed', 'outdated')
  file_path: str()

user_story:
  story_id: str()
  story_file: str()
  scenario_id: str()
  merge_date: str()

merged_steps:
  given: list(any(str(), include('step_modifier')))
  when: list(any(str(), include('step_modifier')))
  then: list(any(str(), include('step_modifier')))

step_modifier:
  and: str(required=False)
  but: str(required=False)
