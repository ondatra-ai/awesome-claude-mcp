# Pre-commit hooks configuration
# See https://pre-commit.com for more information

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        exclude: '^docs/epics/jsons/epics-schema\.yaml$'
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: detect-private-key

  - repo: https://github.com/mpalmer/action-validator
    rev: v0.7.1
    hooks:
    - id: action-validator

  # Go tools from remote repositories
  # Temporarily disabled due to compatibility issues with Go 1.25+
  # Use `make lint-backend` instead which runs golint via go run
  # - repo: https://github.com/golangci/golangci-lint
  #   rev: v1.61.0
  #   hooks:
  #     - id: golangci-lint
  #       args: ['--fix']

  # Temporarily disabled due to Go module structure - use Makefile commands instead
  # - repo: https://github.com/dnephin/pre-commit-golang
  #   rev: v0.5.1
  #   hooks:
  #     - id: go-fmt
  #     - id: go-imports
  #     - id: go-mod-tidy
  #     - id: go-unit-tests
  #       args: ['-short']  # Run only unit tests
  #     # - id: go-build  # Uncomment if you want build checks

  # Alternative: tekwizely/pre-commit-golang has more hooks
  # - repo: https://github.com/tekwizely/pre-commit-golang
  #   rev: v1.0.0-rc.1
  #   hooks:
  #     - id: go-fmt-repo
  #     - id: go-imports-repo
  #     - id: go-mod-tidy-repo

  # Custom local hooks
  - repo: local
    hooks:
      - id: make-lint
        name: Run make lint
        entry: make lint
        language: system
        pass_filenames: false
        always_run: true
      - id: no-nolint-comments
        name: Ensure no //nolint comments
        entry: bash -c
        args:
          - 'count=$(grep -o "//nolint:" $(find . -name "*.go" -not -path "./.git/*" -not -path "./coverage/*" -not -path "./bin/*") 2>/dev/null | wc -l || echo 0); if [ "$count" -gt 0 ]; then echo "Found $count //nolint: comments in Go files. Policy requires zero //nolint: comments."; grep -r "//nolint:" . --exclude-dir=.git --exclude-dir=coverage --exclude-dir=bin --include="*.go" 2>/dev/null || true; exit 1; fi'
        language: system
        files: '\.go$'
        pass_filenames: false
