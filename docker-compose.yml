version: '3.8'

services:
  backend:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    container_name: mcp-backend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - LOG_LEVEL=info
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network
    restart: unless-stopped
    develop:
      watch:
        - action: rebuild
          path: ./services/backend
          ignore:
            - ./services/backend/tmp/

  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    container_name: mcp-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8080
      - PORT=3000
      - HOSTNAME=0.0.0.0
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network
    restart: unless-stopped
    develop:
      watch:
        - action: rebuild
          path: ./services/frontend
          ignore:
            - ./services/frontend/node_modules/
            - ./services/frontend/.next/

networks:
  mcp-network:
    driver: bridge
    name: mcp-network

volumes:
  backend_data:
    name: mcp-backend-data
  frontend_data:
    name: mcp-frontend-data
